pacf(diff(ts.bb))
auto.arima(diff.tsbb)
m <- auto.arima(ts.bb)
plot(forecast(m,5*12))
plot(count~date)
remove(bb_bicyclists$n_date)
bb_bicyclists[,!(names(bb_bicyclists$n_date) %in% drops)]
##Question 2
bb_bicyclists <- read.csv("~/Desktop/Final/bb_bicyclists.csv")
View(bb_bicyclists)
date <- bb_bicyclists$Date
low <- bb_bicyclists$LOW_T
high <- bb_bicyclists$HIGH_T
count <- bb_bicyclists$BB_COUNT
precip <- bb_bicyclists$PRECIP
bb_bicyclists <- bb_bicyclists %>%
mutate(month = month(dmy(Date)),
day=day(dmy(Date)))
View(bb_bicyclists)
?ts #looking up more detail on frequency and start
ts.bb <- ts(count, start=c(4, 1), frequency=30) # frequency 7 for daily, start=c(1,4) for 1st date in the month of April (month 4), ending on the last date, 31st of October(month 10).... Did not work as I hoped
plot(ts.bb)
decompose(ts.bb)
plot(decompose(ts.bb))
diff.tsbb <- diff(ts.bb)
plot(diff(ts.bb))
acf(ts.bb)
pacf(diff(ts.bb))
par(mfrow(2,2))
acf(ts.bb)
pacf(diff(ts.bb))
auto.arima(diff.tsbb)
m <- auto.arima(ts.bb)
plot(forecast(m,5*12))
plot(count~date)
abline(model1, lty=2, col="red", lwd=2)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("~/Desktop/ANT 291/C02 data Mauna Loa.csv")
# Creating Time Series object
ts.CO2 <- ts(dat$CO2, frequency=12, start=c(1974, 5)) # frequency of the sampling and the start time
# Plotting Time Series
plot(ts.CO2)
# Decomposing the data
decompose((ts.CO2))
# Plot
plot(decompose(ts.CO2))
# Differencing the data
diff.CO2 <- diff(ts.CO2)
# Plot
plot(diff.CO2)
?ts #looking up more detail on frequency and start
ts.bb <- ts(count, start=c(4, 1), frequency=30) # frequency 7 for daily, start=c(1,4) for 1st date in the month of April (month 4), ending on the last date, 31st of October(month 10).... Did not work as I hoped
plot(ts.bb)
abline(temp, lty=5, col="red", lwd=.75)
#Visually looking at the data
hist(count)
barplot(tapply(count,date, mean))
#Visually looking at the data
hist(count)
plot(ts.bb) #It looks like it's counting up to month 11 (Nov) when in fact it's because our frequency is 30 (for daily data collection) and there are 4 months with 31 days pushing the data into month 11 visually.
#decomposing and plotting the data
decompose(ts.bb)
plot(decompose(ts.bb))
diff.tsbb <- diff(ts.bb)
plot(diff(ts.bb))
acf(ts.bb)
pacf(diff(ts.bb))
par(mfrow(2,1))
acf(ts.bb)
pacf(diff(ts.bb))
par(mfrow=c(2,1))
par(mfrow=c(2,1))
acf(ts.bb)
pacf(diff(ts.bb))
dat <- read.csv("~/Desktop/ANT 291/C02 data Mauna Loa.csv")
# Creating Time Series object
ts.CO2 <- ts(dat$CO2, frequency=12, start=c(1974, 5)) # frequency of the sampling and the start time
# Plotting Time Series
plot(ts.CO2)
# Decomposing the data
decompose((ts.CO2))
# Plot
plot(decompose(ts.CO2))
# Differencing the data
diff.CO2 <- diff(ts.CO2)
# Plot
plot(diff.CO2)
# ACF
acf(diff.CO2)
# PACF
pacf(diff.CO2)
par(mfrow=c(2,1))
acf(ts.bb)
pacf(diff(ts.bb))
acf(ts.bb)
pacf(diff(ts.bb))
LMA.data <- read.csv("~/Desktop/LMA data.csv")
View(LMA.data)
##Question 3
LMA.data <- read.csv("~/Desktop/LMA data.csv")
##Question 3
LMA <- read.csv("~/Desktop/LMA data.csv")
View(LMA)
summary(LMA$ID)
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID),fill=ID)) + geom_col()
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID),fill=ID)) + geom_col(col=brewer.pal(n = 58, name = 'Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID),fill=ID)) + geom_col(col=brewer.pal(n = 58, name = 'Set3')))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID),fill=ID)) + geom_col(col=brewer.pal(n = 58, name = 'Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) + geom_col(col=brewer.pal(n = 58, name = 'Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) #+ geom_col(col=brewer.pal(n = 58, name = 'Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) + geom_col(col=brewer.pal(n = 58, name = 'Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) + geom_col(scale_fill_distiller(palette = "Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) + geom_col(scale_fill_distiller(palette = "Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID))) + geom_col(scale_fill_distiller(palette = "Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y= frequency(ID)))+geom_col(scale_fill_distiller(palette = "Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))+geom_col(scale_fill_distiller(palette ="Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))+geom_col(scale_fill_distiller(palette ="Blues"), aes(x=ID, y= frequency(ID)))
geom_col(scale_fill_distiller(palette ="Blues"), aes(x=ID, y= frequency(ID)))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))+geom_col(scale_fill_distiller(palette ="Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))+geom_col(scale_fill_distiller(palette ="Blues"))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), col=col=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))#, col=col=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) +geom_col(col=col=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) +geom_col(col=col=brewer.pal(n=35, name='Set3'))
?geom_bar
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) +geom_bar(colours=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) +geom_bar(colours=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) +geom_col(colours=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree") +geom_col(colours=brewer.pal(n=35, name='Set3'))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID") +geom_col(colours=brewer.pal(n=35, name='Set3'))
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot + geom_bar(aes(fill = drv)
idfreqplot + geom_bar(aes(fill = drv))
idfreqplot + geom_bar(aes(scale_fill_brewer(palette = "Blues")
idfreqplot + geom_bar(aes(scale_fill_brewer(palette = "Blues"))
idfreqplot + geom_bar(aes(scale_fill_brewer(palette = "Blues")))
idfreqplot + geom_bar(aes(scale_fill_brewer(palette="Blues")))
idfreqplot + geom_bar(scale_fill_brewer(palette="Blues"))
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues") main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot
idfreqplot
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")+
geom_col(mapping = ID, data = LMA)
?geom_col
ID <- LMA$ID
species <- LMA$species
dfrom <- LMA$dfromtop
<- LMA$totheight
height <- LMA$totheight
totheheight <- LMA$totheight
height <- LMA$height
nar <- LMA$narea
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")+
geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
idfreqplot
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),
main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)) + main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree", ylab="Frequency", xlab="Tree ID")
idfreqplot
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree", labs(y="Frequency", x="Tree ID")
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree", labs(y="Frequency", x="Tree ID"))
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),labs(y="Frequency", x="Tree ID"), scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree", )
idfreqplot
idfreqplot
idfreqplot + scale_colour_brewer(..., type = "seq", palette = 1, direction = 1,
aesthetics = "colour")
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette = 1, direction = 1,aesthetics = "colour")
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette = 1, direction = 1,aesthetics = "colour"))
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette=1, direction=1,aesthetics="colour"))
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette=1, direction=1,aesthetics="Blues"))
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette=1,aesthetics="Blues"))
idfreqplot + scale_colour_brewer(as.data.frame(LMA),type = "seq", palette=1,aesthetics="Blues"))
idfreqplot + scale_colour_brewer(as.data.frame(LMA), aes(x=ID, y=frequency(ID), type = "seq", palette=1,aesthetics="Blues"))
idfreqplot + scale_fill_brewer(direction = -1)
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),labs(y="Frequency", x="Tree ID"), scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree")
idfreqplot + scale_fill_brewer(direction = -1)
idfreqplot <-ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)),scale_fill_brewer(palette="Blues"), main="Frequency of Measurments Per Tree")
idfreqplot + scale_fill_brewer(direction = -1)
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), main="Frequency of Measurments Per Tree", xlab="Tree ID") + geom_bar(aes(weight = ID)) +  theme(legend.position = "top")
geom_col(as.data.frame(LMA), aes(x=ID, y=frequency(ID))
geom_col(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), scale_fill_brewer(palette="Blues"))
?geom_col
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), scale_fill_brewer(palette="Blues"))
g
?geom_bar()
g +(aes(fill = drv), position = position_stack(reverse = TRUE)) +
coord_flip() +
theme(legend.position = "top")
g +(aes(fill = drv), + coord_flip())
g +(aes(fill = drv) + coord_flip())
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)) + scale_fill_brewer(palette="Blues"))
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)), scale_fill_brewer(palette="Blues"))
g
?geom_bar()
?ggplot
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID),scale_fill_brewer(palette="Blues")))
g
?scale_fill_brewer
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID), aesthetics = c("colour", "fill")))
g
?ggplot
g <- ggplot(LMA), aes(x=ID, y=frequency(ID), aesthetics = c("colour", "fill")))
g
g <- ggplot(LMA), aes(x=ID, y=frequency(ID)))
g <- ggplot(LMA), aes(x=ID, y=frequency(ID))
g <- ggplot(LMA)+ aes(x=ID, y=frequency(ID))
g
(as.data.frame
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID), aesthetics = c("colour", "fill")))
?ggplot
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))+
geom_histogram(position = "dodge", binwidth = 1000)
g + scale_fill_brewer()
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) + geom_histogram(position = "dodge", binwidth = 1000)
g
g <- ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID)))
ggplot(as.data.frame(LMA), aes(x=ID, y=frequency(ID))) + geom_col()
tapply(LMA$LMA, LMA$species, mean)
12
ggplot(LMA, aes(x=ID, y = LMA, fill = species)) + geom_boxplot()
LMA
head(LMA)
tapply(LMA$LMA, LMA$species, mean)
LM <- LMA$LMA
hist(LM~species)
hist(LM,species)
hist(LM)
plot(LM, species, col=unique(ID))
boxplot(LM, species, col=unique(ID))
ggplot(LMA, aes(x=ID, y = LMA, fill = species)) + geom_boxplot()
ggplot(LMA, aes(x=ID, y = LMA, fill = species))
ggplot(LMA, aes(x=ID, y = LMA, fill = species)) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species)) + geom_boxplot()
line <- "goldenrod2"
ggplot(LMA, aes(x=ID, y=LMA, fill=species,colour = line)) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species,colour = "yellow")) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species,colour = "yellow")) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species, c("red","blue"))) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species,colour = line, alpha = 0.7,
outlier.colour = "#1F3552", outlier.shape = 20)) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species,
outlier.colour = "#1F3552", outlier.shape = 20)) + geom_boxplot()
, alpha = 0.7
ggplot(LMA, aes(x=ID, y=LMA, fill=species,colour = line, alpha = 0.7,
outlier.colour = "#1F3552", outlier.shape = 20)) + geom_boxplot()
ggplot(LMA, aes(x=ID, y=LMA, fill=species, colour = line, alpha = 0.7,
outlier.colour = "#1F3552", outlier.shape = 20)) + geom_boxplot()
boxplot(LM, species, col=unique(ID))
hist(LM)
library(binom)
dlma <- glmer(dfrom~LM)
dlma <- glm(dfrom~LM)
summary(dlma)
plot(dlma)
ggplot(LMA), aes(x=ID, y=frequency(ID))) + geom_col()
dlma1 <- glm(LM~dfrom)
summary(dlma1)
View(LMA)
mx <- glm(dat$species~ dat$dfromtop+dat$LMA, family="poisson")
levels(ID)
glm(species~LM*dfrom)
dlma1 <- glm(species~LM*dfrom)
dlma1 <- glmer(species~LM*dfrom)
dlma1 <- glmer(species~LM*dfrom + (1|rikz$height), family=poisson, control=glmerControl(optimizer = "bobyqa"))
dlma1 <- glmer(species~LM*dfrom + (1|height), family=poisson, control=glmerControl(optimizer = "bobyqa"))
summary(dlma1)
dlma1 <- glmer(species~LM+dfrom + (1|height), family=poisson, control=glmerControl(optimizer = "bobyqa"))
dlma1 <- glmer(species~LM*dfrom + (1|height), family=poisson, control=glmerControl(optimizer = "bobyqa"))
dlma1 <- glm(species~LM*dfrom)
barplot(tapply(species, ID, mean), ylim=c(0,1))
barplot(tapply(species, ID, mean))
barplot(tapply(species, ID, mean), ylim=c(0,35))
barplot(tapply(species, ID, mean), ylim=c(0,10))
dlma1 <- glmer(species~LM*dfrom + (1|height), family=quasipoisson(), control=glmerControl(optimizer = "bobyqa"))
length(species)
length(species$Pinus)
length(species$Pinus_ponderosa
)
length(species$Pinus_ponderosa)
averages(LM[1:124])
lm <- LM[1:24]
lm
length(lm)
lm <- LM[1:124]
length(lm)
pinp <- LM[1:124]
length(pinp)
averages(pinp)
sum(pinp)
spinp <- sum(pinp)
length(pinp)
spinp / length(pinp)
pinp <- LM[125:249]
pinm <- LM[125:249]
length(pinm)
spinm <- sum(pinm)
spinm / length(pinm)
pinp <- LM[1:124]
length(pinp)
spinp <- sum(pinp)
spinp / length(pinp)
pinm <- LM[125:249]
length(pinm)
spinm <- sum(pinm)
spinm / length(pinm)
dlma <- glm(dfrom~LM)
pinm
pinp <- LM[1:124]
length(pinp)
spinp <- sum(pinp)
spinp / length(pinp)
pinm <- LM[125:249]
length(pinm)
spinm <- sum(pinm)
spinm / length(pinm)
dlma <- glm(dfrom~LM)
summary(dlma)
dlma1 <- glm(species~LM*dfrom)
dlma1 <- glmer(species~LM*dfrom)
dlma1 <- glmer(species~LM*dfrom + (1|height), family=quasipoisson(), control=glmerControl(optimizer = "bobyqa"))
dlma1 <- lme4(species~LM*dfrom)
dlma1 <- glmer(species~LM*dfrom)
dlma <- glm(dfrom~LM)
summary(dlma)
dlma1 <- glmer(dfrom~LM*species)
dlma1 <- glm(dfrom~LM*species)
summary(dlma1)
plot((dfrom~LM))
plot(dfrom~LM)
abline(temp, lty=5, col="red", lwd=.75)
plot(dfrom~LM)
abline(temp, lty=5, col="red", lwd=.75)
plot(dfrom~LM)
abline(temp, lty=5, col="red", lwd=.75)
plot(low~high, col=c("forestgreen", "orange"), main="Relationship Between Daily
High & Low Temperature", ylab="Low Temperature", xlab="High Temperature")
abline(temp, lty=5, col="red", lwd=.75)
temp
abline(dlma, lty=5, col="red", lwd=.75)
plot(dfrom~LM)
abline(dlma, lty=5, col="red", lwd=.75)
plot(dfrom~LM, col="forestgreen")
abline(dlma, lty=5, col="red", lwd=.75)
abline(dlma, lty=5, col="orange2", lwd=.75)
abline(dlma, lty=5, col="orange2", lwd=1)
abline(dlma, lty=5, col="orange2", lwd=1)
abline(dlma, lty=1, col="orange2", lwd=1)
abline(dlma, lty=1, col="orange2", lwd=1, main="Relationship between Distance from Top of the Tree and LMA", xlab="Leaf Mass per Area")
plot(dfrom~LM, col="forestgreen",main="Relationship between Distance from Top of the Tree and LMA", xlab="Leaf Mass per Area")
plot(dfrom~LM, col="forestgreen",main="Relationship between Distance from Top
of the Tree and LMA", xlab="Leaf Mass per Area")
plot(dfrom~LM, col="forestgreen",main="Relationship between Distance from Top
of the Tree and LMA", xlab="Leaf Mass per Area", ylab= "Distance from Top of the Tree")
abline(dlma, lty=1, col="orange2", lwd=1)
summary(dlma)
dlma1 <- glmer(species~LM*dfrom + (1|height), family=quasipoisson(), control=glmerControl(optimizer = "bobyqa"))
dlma1 <- glm(dfrom~LM*species)
summary(dlma1)
plot(dlma1)
dlma1 <- glm(dfrom~LM+(1|species))
dlma1 <- glmer(dfrom~LM+(1|species))
dlma1 <- glmer(dfrom~LM+(1|species), family = gaussian(link = "identity"))
dlma1 <- glm(dfrom~LM*species)
summary(dlma1)
plot(dlma1)
plot(dfrom~LM*species)
boxplot(dfrom~LM*species)
plot
plot(dfrom~LM*species)
dlma1 <- glm(dfrom~LM*species, data = LMA, family = binomial)
summary(dlma1)
pimpp <- rep("Pinus ponderosa", 124)
pimpp
pimmm <- rep("Pinus monticola",125)
PinP <- cbind(pinp,pimpp)
PinP
PinP <- cbind(pimpp,pinp)
PinP
PinM <- cbind(pimmm,pinm)
PinM
dlma1 <- glm(dfrom~LM*PinP, data = LMA, family = binomial)
species
dlma1 <- glm(dfrom~LM*species, data = LMA, family = binomial)
dlma1 <- glm(dfrom~LM*species, data = LMA, family = gaussian())
summary(dlma1)
plot(dfrom~LM*species)
install.packages(ggmaps)
install.packages(ggmap)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggmap")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
remove(C02)
remove(bb_bicyclists)
remove(C02.data.Mauna.Loa)
remove(caCounties)
install.packages("ggmap")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
load(ggplot2)
library(ggplot2)
library(tidyverse)
library(ggplot2)
kingpc <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
View(kingpc)
view(kingpc)
ggplot(kingpc, aes(V7, V8, color=V1))+geom_points()
ggplot(kingpc, aes(V7, V8, color=V1))+geom_points()
ggplot(kingpc, aes(V7, V8))
library(ggplot2)
ggplot(kingpc, aes(V7, V8), color=V1)+geom_points()
ggplot(kingpc, aes(V7, V8))
kingpc <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
ggplot(kingpc, aes(V7, V8))
ggplot(kingpc, aes(V7, V8), color=V1)+geom_point()
ggplot(kingpc, aes(V7, V8), color=V2)+geom_point()
ggplot(kingpc, aes(V7, V8, color=V1)+geom_point()
ggplot(kingpc, aes(V7, V8, color=V1))+geom_point()
ggplot(kingpc, aes(V7, V8,color=V1))+geom_point()
ggplot(kingpc, aes(V9, V10,color=V1))+geom_point()
ggplot(kingpc, aes(V11, V12,color=V1))+geom_point()
ggplot(kingpc, aes(V13, V14,color=V1))+geom_point()
ggplot(kingpc, aes(V11, V12,color=V1))+geom_point()
ggplot(kingpc, aes(V15, V16,color=V1))+geom_point()
ggplot(kingpc, aes(V17, V18,color=V1))+geom_point()
kingmds <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
kingmds <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
ggplot(kingmds, aes(V7, V8,color=V1))+geom_point()
ggplot(kingmds, aes(V9, V10,color=V1))+geom_point()
ggplot(kingmds, aes(V11, V12,color=V1))+geom_point()
kingmds <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
ggplot(kingmds, aes(V7, V8,color=V1))+geom_point()
ggplot(kingmds, aes(V9, V10,color=V1))+geom_point()
ggplot(kingmds, aes(V11, V12,color=V1))+geom_point()
ggplot(kingmds, aes(V13, V14,color=V1))+geom_point()
data <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
view(kingpc)
read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
data <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
data <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
view(data)
ggplot(data, aes(V7, V8,color=V1))+geom_point()
library(ggplot2)
library(tidyverse)
data <- read.table("~/Desktop/kingpc.ped", quote="\"", comment.char="")
view(data)
ggplot(data, aes(V7, V8,color=V1))+geom_point()
ggplot(data, aes(V9, V10,color=V1))+geom_point()
ggplot(data, aes(V11, V12,color=V1))+geom_point()
ggplot(data, aes(V13, V14,color=V1))+geom_point()
ggplot(data, aes(V7, V8,color=V1))+geom_point()
ggplot(data, aes(V9, V10,color=V1))+geom_point()
setwd("/Users/dana.alhindi/Desktop/phenotype data/cederberg/cederberg_phenotypes_2017-1.csv")
setwd("/Users/dana.alhindi/Desktop/phenotype data/cederberg/")
data = read.csv("cederberg_phenotypes_2017-1.csv")
data = as.data.frame(data)
nrow(data)
drop_avg = function(v){
new = v[v != max(v) & v!= min(v)] # remove min & max
avg = mean(new)
return(avg)
}
data$avg_E_Inner_R = NA
data$avg_E_Inner_L = NA
data$avg_M_Inner_R = NA
data$avg_M_Inner_L = NA
cols=c("E_Inner_R_1","E_Inner_R_2","E_Inner_R_3","E_Inner_R_4","E_Inner_R_5",
"E_Inner_L_1","E_Inner_L_2","E_Inner_L_3","E_Inner_L_4","E_Inner_L_5",
"M_Inner_R_1","M_Inner_R_2","M_Inner_R_3","M_Inner_R_4","M_Inner_R_5",
"M_Inner_L_1","M_Inner_L_2","M_Inner_L_3","M_Inner_L_4","M_Inner_L_5")
data[, cols] <- sapply(data[,cols ], as.numeric)
for (row in 1:nrow(data)){
E_Inner_R = data[row, c("E_Inner_R_1","E_Inner_R_2","E_Inner_R_3","E_Inner_R_4","E_Inner_R_5")]
data[row,]$avg_E_Inner_R = drop_avg(E_Inner_R)
E_Inner_L = data[row, c("E_Inner_L_1","E_Inner_L_2","E_Inner_L_3","E_Inner_L_4","E_Inner_L_5")]
data[row,]$avg_E_Inner_L = drop_avg(E_Inner_L)
M_Inner_R = data[row, c("M_Inner_R_1","M_Inner_R_2","M_Inner_R_3","M_Inner_R_4","M_Inner_R_5")]
data[row,]$avg_M_Inner_R = drop_avg(M_Inner_R)
M_Inner_L = data[row, c("M_Inner_L_1","M_Inner_L_2","M_Inner_L_3","M_Inner_L_4","M_Inner_L_5")]
data[row,]$avg_M_Inner_L = drop_avg(M_Inner_L)
}
data = data[-(which.outlier(data$avg_E_Inner_R, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
data = data[-(which.outlier(data$avg_E_Inner_L, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
data = data[-(which.outlier(data$avg_M_Inner_R, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
data = data[-(which.outlier(data$avg_M_Inner_L, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
data = data[-(which.outlier(data$avg_E_Inner_R, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
data = data[-(which.outlier(data$avg_E_Inner_L, thr = 2, method = "sd", high = TRUE, low = TRUE)),]
